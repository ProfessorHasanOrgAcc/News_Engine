name: Run Python script every day at 1 AM UTC

on:
  schedule:
    - cron: '0 1 * * *'  # Every day at 1 AM UTC
  workflow_dispatch:

env:
  NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
  EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
  EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  EMAIL_TO: ${{ secrets.EMAIL_TO }}

jobs:
  scrape-news:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: news-cache-branch   # Checkout your dedicated cache branch

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Cache NLTK data
        uses: actions/cache@v3
        with:
          path: ~/nltk_data
          key: ${{ runner.os }}-nltk-data-${{ hashFiles('**/*.py') }}

      - name: Set NLTK_DATA environment variable
        run: echo "NLTK_DATA=/home/runner/nltk_data" >> $GITHUB_ENV

      - name: Install and configure Tor (HashedControlPassword)
        run: |
          sudo apt-get update
          sudo apt-get install tor -y
          echo "ControlPort 9051" | sudo tee -a /etc/tor/torrc
          echo "HashedControlPassword 16:9954B614B2DD778A60D7F1B1414D34DC3B2951C465A545628C2A4269C8" | sudo tee -a /etc/tor/torrc
          echo "CookieAuthentication 0" | sudo tee -a /etc/tor/torrc
          sudo service tor restart
          sleep 10

      - name: Cache news cache directory
        uses: actions/cache@v3
        with:
          path: news_cache
          key: news-cache-${{ runner.os }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            news-cache-${{ runner.os }}-

      - name: Run scraper
        run: python news_scraper.py

      - name: Commit and push results
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/ProfessorHasan/News_Engine.git

          # Make sure branch exists or create it if needed:
          if ! git show-ref --verify --quiet refs/heads/news-cache-branch; then
            git checkout -b news-cache-branch
          fi

          git add news_cache/*.pkl || echo "No files to add"
          git commit -m "Add news data $(date -u)" || echo "No changes to commit"
          git push origin news-cache-branch
